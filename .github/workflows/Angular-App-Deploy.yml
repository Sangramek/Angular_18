name: Angular App Deployment

on: 
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
  
    # - name: Change directory to hello-app
    #   run: ./home/runner/work/Angular_18/Angular_18/hello-app/package.json
  
    - name: Install dependencies
      run:  npm install
      working-directory: ./hello-app
      
    - name: Build Angular app
      run: npm run build --prod
      working-directory: ./hello-app

    - name: Deploy to AWS EC2
      if: github.ref == 'refs/heads/main' # Change this to your default branch if necessary
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # Start the SSH agent
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa

        # SSH commands for deployment
        ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << 'EOF'
          mkdir -p ~/app
          rm -rf ~/app/*
        EOF

        scp -r dist/hello-app/* $REMOTE_USER@$REMOTE_HOST:~/app/

        ssh $REMOTE_USER@$REMOTE_HOST << 'EOF'
          cd ~/app
          nohup npx http-server -p 8080 &
        EOF
 
      # run: |
      #   echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
      #   ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
      #     mkdir -p ~/app
      #     rm -rf ~/app/*
      #   EOF
      #   scp -r dist/hello-app/* ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/app/
      #   ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
      #     cd ~/app
      #     # Replace the following command with the one to start your Angular app if necessary
      #     nohup npx http-server -p 8080 &
      #   EOF
      
